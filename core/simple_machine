
for(int i = 0; i < 10;i++);

///False instructions set
main:

    A = 0;
    B = 1;
    loop:
    add C, A, B
    A = C;

    A < 10 ? loop : HALT

exit:
    HALT


//Real instructions
main:
    li a, 0 //Load in A the value 0

    li b, 1 //Load in B the value 1

    li d, loop

.loop: add
    
    mv a, c

    cmp

    jmp D, 0x00

    li d, exit
    ujmp d, 0x00

    

exit:
    HALT


//Linked
0x00:
    li a, 0 //Load in A the value 0

    li b, 1 //Load in B the value 1

    li d, 0x03

0x03: add
    
    mv a, c

    cmp

    jmp D, 0x00

    li d, 0x09
    ujmp d, 0x00

    
0x09:
    HALT

//Actual instructions
0x00: li a, 0 //Load in A the value 0
0x01: li b, 1 //Load in B the value 1
0x02: li d, 0x03
0x03: add    
0x04: mv a, c
0x05: cmp
0x06: jmp D, 0x00
0x07: li d, 0x09
0x08: ujmp d, ab, 0x00
0x09: HALT

//Convertion to binary
0x00: 7 0, 0
0x01: 7 1, 1
0x02: 7 3, 0x03
0x03: 0    
0x04: 14 0, 2
0x05: 13
0x06: 11 3, 0x00
0x07: 7 3, 0x09
0x08: 12 3, 0x00
0x09: 15


0x00: 1110 00, 0000 000 00
0x01: 1110 01, 0000 000 01
0x02: 1110 11, 0000 000 11
0x03: 000 0000 0000 0000
0x04: 1110 00, 10 0000 0000
0x05: 1101 0000 0000 0000
0x06: 1011 11, 00 0000 0000
0x07: 1110 11, 10 0100 0000
0x08: 1100 11, 00 0000 0000
0x09: 1111 00  00 0000 0000


0x00: 0000 0000 0000 1110
0x01: 0000 0000 0101 1110
0x02: 0000 0000 1111 1110
0x03: 0000 0000 0000 0000
0x04: 0000 0000 1000 1110
0x05: 0000 0000 0000 1101
0x06: 0000 0000 0011 1011
0x07: 0000 0100 1011 1110
0x08: 0000 0000 0011 1100
0x09: 0000 0000 0000 1111

/////////////////////////////////////////////////////////////////
//                        Instructions                         //
/////////////////////////////////////////////////////////////////
//Arithmetic Instruction
    0x0:0 add
    0x1:1 sub
    0x2:2 and
    0x3:3 or
    0x4:4 shftl
    0x5:5 shttr

//Memory operations
    0x6:6 ld rd, r2
    0x7:7 li rd, 0xfff

    0x8 st rs1, rs2, 0x00000

//Memory: Stack Operations
    0x9:9  push rs1
    0xa:10 pop rs1

//Jump
    0xb:11 jump rs1, condition, offset
    0xc:12 ujump rs1, offset

//Compare instructions. It will use none_encoding
    0xd:13 cmp

//Move instructions. register_encoding
    0xe:14 mv rd, rs1

//Halt Instruction. It will use none_encoding
    0xf:15 halt

/////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////
//                        Encoding                             //
/////////////////////////////////////////////////////////////////

16  15  14  13  12  11  10  9   8   7   6   5   4   3   2   1
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
15  14  13  12  11  10  9   8   7   6   5   4   3   2   1   0


//Instruction encoding for Arithmetic instructions
16  15  14  13  12  11  10  9   8   7   6   5   4   3   2   1
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ none_encoding
|   |   |   |   |   |   |   |   |   |   |   |     Opcode    |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
15  14  13  12  11  10  9   8   7   6   5   4   3   2   1   0

//Instruction encoding for Memory instructions, offset gets added to rs2
16  15  14  13  12  11  10  9   8   7   6   5   4   3   2   1
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ register_encoding
|            Offset         |  r2   |  r1   |     Opcode    |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
15  14  13  12  11  10  9   8   7   6   5   4   3   2   1   0

//Instruction encoding for Stack instructions
16  15  14  13  12  11  10  9   8   7   6   5   4   3   2   1
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ stack_encoding
|   |   |   |   |   |   |   |   |   |  rd   |     Opcode    |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
15  14  13  12  11  10  9   8   7   6   5   4   3   2   1   0

//Instruction encoding for Jump instructions
16  15  14  13  12  11  10  9   8   7   6   5   4   3   2   1
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ immediate_encoding
|            Offset                         |    Opcode     |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
15  14  13  12  11  10  9   8   7   6   5   4   3   2   1   0

16  15  14  13  12  11  10  9   8   7   6   5   4   3   2   1
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ jump_conditional_immediate_encoding
|            Offset                 |   rd  |    Opcode     |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
15  14  13  12  11  10  9   8   7   6   5   4   3   2   1   0

/////////////////////////////////////////////////////////////////
//                        Registers                            //
/////////////////////////////////////////////////////////////////

A = 0: 00
B = 1: 01
C = 2: 10
D = 3: 11

//Fast, Small
+-------+        +-----+
|       | A -----|      \
+-------+         \      \-------+
+-------+         /      /       |
|       | B -----|      /        |
+-------+        +-----+         |
+-------+                        |
|       | C <--------------------+
+-------+
+-------+
|       | D
+-------+

+-------+
|       | SP
+-------+
+-------+
|       | BP
+-------+

+-------+
|       | PC
+-------+
+-------+
|       | IR
+-------+

/////FLAGS

+-------+
|       | A > B
+-------+
+-------+
|       | EQ A == B
+-------+
+-------+
|       | NEG A is negative
+-------+


//Giant Slow
+-------+ 0
|       |
+-------+
+-------+ 1
|   23  |
+-------+
+-------+ 2
|  23   |
+-------+
+-------+ 3
|       |
+-------+ 
+-------+ 4
|       |
+-------+
+-------+ 5
|  2342 |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+
+-------+
|       |
+-------+

